//@import "../../../../../node_modules/bootstrap/scss/forms/input-group";

.input-group {
  position: relative;
  display: flex;
  flex-wrap: wrap; // For form validation feedback
  align-items: stretch;
  width: 100%;

  > .form-control,
  > .form-select {
    position: relative; // For focus state's z-index
    flex: 1 1 auto;
    width: 1%;
    min-width: 0; // https://stackoverflow.com/questions/36247140/why-dont-flex-items-shrink-past-content-size
  }

  // Bring the "active" form control to the top of surrounding elements
  > .form-control:focus,
  > .form-select:focus {
    z-index: 5;
  }

  // Ensure buttons are always above inputs for more visually pleasing borders.
  // This isn't needed for `.input-group-text` since it shares the same border-color
  // as our inputs.
  .btn {
    position: relative;
    z-index: 2;

    &:focus {
      z-index: 5;
    }
  }

  &:not(:has(.is-invalid,:user-invalid)):focus-within,
  &:not(:has(.is-invalid,:user-invalid)):hover {
    --input-bg-color: var(--input-focus-bg-color);
    --input-border-color: var(--input-focus-border-color);
    --input-color: var(--input-focus-color);
  }
}

.input-group-text {
  display: flex;
  align-items: center;
  padding: $input-group-addon-padding-y $input-group-addon-padding-x;
  font-size:$input-font-size;
  font-weight: $input-group-addon-font-weight;
  line-height: $input-line-height;
  color: var(--input-color);
  text-align: center;
  white-space: nowrap;
  background: var(--input-group-bg);
  border: $input-border-width solid var(--input-border-color);
  @include border-radius($input-border-radius);

  @include transition($input-transition);
}

.input-group-prepend {
  max-width: 30%;
}

.input-group {
  &:not(.has-validation) {
    > :not(:last-child):not(.dropdown-toggle):not(.dropdown-menu),
    > .dropdown-toggle:nth-last-child(n + 3) {
      @include border-end-radius(0);
    }
  }

  &.has-validation {
    > :nth-last-child(n + 3):not(.dropdown-toggle):not(.dropdown-menu),
    > .dropdown-toggle:nth-last-child(n + 4) {
      @include border-end-radius(0);
    }
  }

  > :not(:first-child):not(.dropdown-menu) {
    margin-left: calc(#{$input-border-width} * -1); // stylelint-disable-line function-disallowed-list
    @include border-start-radius(0);
  }
}
