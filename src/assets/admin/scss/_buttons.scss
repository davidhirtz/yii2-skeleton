//@import "../../../../node_modules/bootstrap/scss/buttons";

.btn {
  --#{$prefix}btn-color: #{$btn-color};
  --#{$prefix}btn-bg: transparent;
  --#{$prefix}btn-border-color: transparent;
  --#{$prefix}btn-hover-border-color: transparent;
  --#{$prefix}btn-box-shadow: #{$btn-box-shadow};
  --#{$prefix}btn-focus-box-shadow: 0 0 0 #{$btn-focus-width} rgba(var(--#{$prefix}btn-focus-shadow-rgb), .5);

  display: inline-block;
  padding: $btn-padding-y $btn-padding-x;
  font-family: $btn-font-family;
  @include font-size($btn-font-size);
  font-weight: var($btn-font-weight);
  line-height: var($btn-line-height);
  color: var(--#{$prefix}btn-color);
  text-align: center;
  text-decoration: if($link-decoration == none, null, none);
  white-space: $btn-white-space;
  vertical-align: middle;
  cursor: if($enable-button-pointers, pointer, null);
  user-select: none;
  border: $btn-border-width solid var(--#{$prefix}btn-border-color);
  min-width: $app-btn-min-width;

  @include border-radius($btn-border-radius);
  @include gradient-bg(var(--#{$prefix}btn-bg));
  @include box-shadow(var(--#{$prefix}btn-box-shadow));
  @include transition($btn-transition);

  &:hover {
    color: var(--#{$prefix}btn-hover-color);
    text-decoration: if($link-hover-decoration == underline, none, null);
    background-color: var(--#{$prefix}btn-hover-bg);
    border-color: var(--#{$prefix}btn-hover-border-color);
  }

  .btn-check + &:hover {
    color: var(--#{$prefix}btn-color);
    background-color: var(--#{$prefix}btn-bg);
    border-color: var(--#{$prefix}btn-border-color);
  }

  &:focus-visible {
    color: var(--#{$prefix}btn-hover-color);
    @include gradient-bg(var(--#{$prefix}btn-hover-bg));
    border-color: var(--#{$prefix}btn-hover-border-color);
    outline: 0;

    @if $enable-shadows {
      box-shadow: var(--#{$prefix}btn-box-shadow), var(--#{$prefix}btn-focus-box-shadow);
    } @else {
      box-shadow: var(--#{$prefix}btn-focus-box-shadow);
    }
  }

  .btn-check:focus-visible + & {
    border-color: var(--#{$prefix}btn-hover-border-color);
    outline: 0;

    @if $enable-shadows {
      box-shadow: var(--#{$prefix}btn-box-shadow), var(--#{$prefix}btn-focus-box-shadow);
    } @else {
      box-shadow: var(--#{$prefix}btn-focus-box-shadow);
    }
  }

  .btn-check:checked + &,
  :not(.btn-check) + &:active,
  &:first-child:active,
  &.active,
  &.show {
    color: var(--#{$prefix}btn-active-color);
    background-color: var(--#{$prefix}btn-active-bg);
    background-image: if($enable-gradients, none, null);
    border-color: var(--#{$prefix}btn-active-border-color);
    @include box-shadow(var(--#{$prefix}btn-active-shadow));

    &:focus-visible {
      @if $enable-shadows {
        box-shadow: var(--#{$prefix}btn-active-shadow), var(--#{$prefix}btn-focus-box-shadow);
      } @else {
        box-shadow: var(--#{$prefix}btn-focus-box-shadow);
      }
    }
  }

  .btn-check:checked:focus-visible + & {
    @if $enable-shadows {
      box-shadow: var(--#{$prefix}btn-active-shadow), var(--#{$prefix}btn-focus-box-shadow);
    } @else {
      box-shadow: var(--#{$prefix}btn-focus-box-shadow);
    }
  }

  &:disabled,
  &.disabled,
  fieldset:disabled & {
    color: var(--#{$prefix}btn-disabled-color);
    pointer-events: none;
    background-color: var(--#{$prefix}btn-disabled-bg);
    border-color: var(--#{$prefix}btn-disabled-border-color);
    opacity: $btn-disabled-opacity;
    @include box-shadow(none);
  }
}

.btn-primary {
  --#{$prefix}btn-bg: #{$app-btn-primary-bg};
  --#{$prefix}btn-color: #{$app-btn-primary-color};
  --#{$prefix}btn-border-color: #{$app-btn-primary-border-color};
  --#{$prefix}btn-hover-bg: #{$app-btn-primary-hover-bg};
  --#{$prefix}btn-hover-color: #{$app-btn-primary-hover-color};
  --#{$prefix}btn-hover-border-color: #{$app-btn-primary-hover-border-color};
}

.btn-secondary {
  --#{$prefix}btn-bg: #{$app-btn-secondary-bg};
  --#{$prefix}btn-color: #{$app-btn-secondary-color};
  --#{$prefix}btn-border-color: #{$app-btn-secondary-border-color};
  --#{$prefix}btn-hover-bg: #{$app-btn-secondary-hover-bg};
  --#{$prefix}btn-hover-color: #{$app-btn-secondary-hover-color};
  --#{$prefix}btn-hover-border-color: #{$app-btn-secondary-hover-border-color};
}

.btn-danger {
  --#{$prefix}btn-bg: #{$app-btn-danger-bg};
  --#{$prefix}btn-color: #{$app-btn-danger-color};
  --#{$prefix}btn-border-color: #{$app-btn-danger-border-color};
  --#{$prefix}btn-hover-bg: #{$app-btn-danger-hover-bg};
  --#{$prefix}btn-hover-color: #{$app-btn-danger-hover-color};
  --#{$prefix}btn-hover-border-color: #{$app-btn-danger-hover-border-color};
}

.btn-link {
  --#{$prefix}btn-font-weight: #{$font-weight-normal};
  --#{$prefix}btn-color: #{$btn-link-color};
  --#{$prefix}btn-bg: transparent;
  --#{$prefix}btn-border-color: transparent;
  --#{$prefix}btn-hover-color: #{$btn-link-hover-color};
  --#{$prefix}btn-hover-border-color: transparent;
  --#{$prefix}btn-active-color: #{$btn-link-hover-color};
  --#{$prefix}btn-active-border-color: transparent;
  --#{$prefix}btn-disabled-color: #{$btn-link-disabled-color};
  --#{$prefix}btn-disabled-border-color: transparent;
  --#{$prefix}btn-box-shadow: 0 0 0 #000; // Can't use `none` as keyword negates all values when used with multiple shadows
  --#{$prefix}btn-focus-shadow-rgb: #{$btn-link-focus-shadow-rgb};

  text-decoration: $link-decoration;

  @if $enable-gradients {
    background-image: none;
  }

  &:hover,
  &:focus-visible {
    text-decoration: $link-hover-decoration;
  }

  &:focus-visible {
    color: var(--#{$prefix}btn-color);
  }

  &:hover {
    color: var(--#{$prefix}btn-hover-color);
  }
}

.btn-block {
  display: block;
  width: 100%;
}

.btn-sm {
  padding: $btn-padding-y-sm $btn-padding-x-sm;
  border-radius: $btn-border-radius-sm;
  @include font-size($btn-font-size-sm);
}

.btn-transparent {
  padding: 0;
  border: 0;
  outline: 0 !important;
  background: transparent;
  color: inherit;
}