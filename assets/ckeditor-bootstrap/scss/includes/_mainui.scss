/*
Copyright (c) 2003-2014, CKSource - Frederico Knabben. All rights reserved.
For licensing, see LICENSE.md or http://ckeditor.com/license
*/

/*
mainui.css (part of editor.css)
=================================

This file styles the basic structure of the CKEditor user interface - the box
that holds everything.

CKEditor offers two main editing modes. The main UI blocks that compose these
modes are:

    For "Theme UI" mode, the one most generally used:

    +-- .cke_chrome ----------------------+
    |+-- .cke_inner ---------------------+|
    || +-- .cke_top -------------------+ ||
    || |                               | ||
    || +-------------------------------+ ||
    || +-- .cke_contents --------------+ ||
    || |                               | ||
    || +-------------------------------+ ||
    || +-- .cke_bottom ----------------+ ||
    || |                               | ||
    || +-------------------------------+ ||
    |+-----------------------------------+|
    +-------------------------------------+

    For "Inline Editing" mode:

    +-- .cke_chrome .cke_float------------+
    |+-- .cke_inner ---------------------+|
    || +-- .cke_top -------------------+ ||
    || |                               | ||
    || +-------------------------------+ ||
    |+-----------------------------------+|
    +-------------------------------------+

Special outer level classes used in this file:

    .cke_hc: Available when the editor is rendered on "High Contrast".

*/

/* The outer boundary of the interface. */
.cke_chrome {
  display: block;
  width: 100%;
  padding: 0;
  font-size: $font-size-base;
  line-height: $line-height-base;
  color: $input-color;
  background-color: $input-bg;
  border: 1px solid $input-border-color;
  border-radius: $input-border-radius; // Note: This has no effect on <select>s in some browsers, due to the limited stylability of <select>s in CSS.

}

/* The inner boundary of the interface. */
.cke_inner {
  /* This is <span>, so transform it into a block.*/
  display: block;

  -webkit-touch-callout: none;

  background: transparent;
  padding: 0;
}

/* Added to the outer boundary of the UI when in inline editing,
   when the UI is floating. */
.cke_float {
  /* Make white the space between the outer and the inner borders. */
  border: none;

  .cke_inner {
    /* As we don't have blocks following top (toolbar) we suppress the padding
       as the toolbar defines its own margin. */
    padding-bottom: 0;
  }

  .cke_top {
    border: 1px solid $input-border-color;
  }
}

/* Make the main spaces enlarge to hold potentially floated content. */
.cke_top, .cke_contents, .cke_bottom {
  /* These are <span>s, so transform them into blocks.*/
  display: block;

  /* Ideally this should be "auto", but it shows scrollbars in IE7. */
  overflow: hidden;
}

.cke_top, .cke_bottom {
  padding: 3px 0 0;
  background: $gray-400;
}

.cke_top {
  color: $input-color;
  background-color: $input-group-addon-bg;
  border-bottom: 1px solid $input-group-addon-border-color;
  /* Allow breaking toolbars when in a narrow editor. (#9947) */
  white-space: normal;
  padding: $input-padding-y 0 $input-padding-y $input-padding-x;
}

.cke_contents {
  background-color: #fff;
  border: 0;
  @include box-shadow(inset 0 1px 1px rgba(0, 0, 0, .075)); // Redeclare so transitions work;
}

.cke_bottom {
  position: relative;
}

/* On iOS we need to manually enable scrolling in the contents block. (#9945) */
.cke_browser_ios .cke_contents {
  overflow-y: auto;
  -webkit-overflow-scrolling: touch;
}