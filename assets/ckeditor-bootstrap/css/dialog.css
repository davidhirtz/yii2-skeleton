/**
 * CKEditor dialog.
 */
/**
 * The default stylesheet included on all requests.
 */
/*
Colors.
 */
/*
Grid.
 */
/*
Spacers.
 */
/**
Border.
 */
/*
Text.
 */
/*
Navs.
 */
/*
Navbar.
 */
/*
Breadcrumbs.
 */
/*
Alert.
 */
/*
Card.
 */
/*
Grid view.
 */
/*
Buttons.
 */
/*
Input.
 */
/*
List group.
 */
/*
Tables.
 */
/*
Pagination.
 */
/*
Dropdown.
 */
/*
Badge.
 */
/*
Tooltip.
 */
/**
Thumbnail.
 */
/*
Icon.
 */
/**
 * Includes Bootstrap 4.
 */
/* The outer container of the dialog. */
.cke_dialog {
  /* Mandatory: Because the dialog.css file is loaded on demand, we avoid
        showing an unstyled dialog by hidding it. Here, we restore its visibility. */
  visibility: visible;
}

/* The inner boundary container. */
.cke_dialog_body {
  z-index: 1;
  background: #ddd;
  border: 1px solid #ddd;
  border-radius: 3px;
}

/* This one is required by Firefox 3.6. Without it,
   dialog tabs and resizer float outside of the dialog.
   Although this rule doesn't seem to break anything on other
   browsers, it doesn't work with broken jQueryUI - #9851. */
.cke_browser_gecko19 .cke_dialog_body {
  position: relative;
}

/* Due to our reset we have to recover the styles of some elements. */
.cke_dialog strong {
  font-weight: bold;
}

/* The dialog title. */
.cke_dialog_title {
  font-weight: bold;
  font-size: 13px;
  cursor: move;
  position: relative;
  color: #222;
  border-bottom: 1px solid #ddd;
  padding: 10px 12px;
  background: #ddd;
}

/* The outer part of the dialog contants, which contains the contents body
   and the footer. */
.cke_dialog_contents {
  background-color: #fff;
  overflow: auto;
  padding: 15px 10px 5px 10px;
  margin-top: 35px;
  border-top: 1px solid #ddd;
  border-radius: 0 0 3px 3px;
}

/* The contents body part, which will hold all elements available in the dialog. */
.cke_dialog_contents_body {
  overflow: auto;
  padding: 17px 10px 5px 10px;
  margin-top: 22px;
}

/* The dialog footer, which usually contains the "Ok" and "Cancel" buttons as
   well as a resize handler. */
.cke_dialog_footer {
  text-align: right;
  position: relative;
  border-radius: 0 0 3px 3px;
  border-top: 1px solid #ddd;
  background: #ddd;
}

.cke_rtl .cke_dialog_footer {
  text-align: left;
}

.cke_hc .cke_dialog_footer {
  outline: none;
  border-top: 1px solid #fff;
}

.cke_dialog .cke_resizer {
  margin-top: 28px;
}

.cke_dialog .cke_resizer_rtl {
  margin-left: 5px;
}

.cke_dialog .cke_resizer_ltr {
  margin-right: 5px;
}

/*
Dialog tabs
-------------

Tabs are presented on some of the dialogs to make it possible to have its
contents split on different groups, visible one after the other.

The main element that holds the tabs can be made hidden, in case of no tabs
available.

The following is the visual representation of the tabs block:

+-- .cke_dialog_tabs ------------------------------------+
|  +-- .cke_dialog_tab --+ +-- .cke_dialog_tab --+ ...   |
|  |                     | |                     |       |
|  +---------------------+ +---------------------+       |
+--------------------------------------------------------+

The .cke_dialog_tab_selected class is appended to the active tab.
*/
/* The main tabs container. */
.cke_dialog_tabs {
  height: 24px;
  display: inline-block;
  margin: 10px 0 0;
  position: absolute;
  z-index: 2;
  left: 10px;
}

.cke_rtl .cke_dialog_tabs {
  right: 10px;
}

/* A single tab (an <a> element). */
a.cke_dialog_tab {
  display: inline;
  height: 16px;
  padding: 4px 8px;
  margin-right: 3px;
  cursor: pointer;
  line-height: 16px;
  outline: none;
  color: #222;
  border: 1px solid #ddd;
  border-radius: 3px 3px 0 0;
  background: #e2e2e2;
}

.cke_rtl a.cke_dialog_tab {
  margin-right: 0;
  margin-left: 3px;
}

/* A hover state of a regular inactive tab. */
a.cke_dialog_tab:hover {
  background: #ddd;
  text-decoration: none;
}

a.cke_dialog_tab_selected {
  background: #fff;
  color: #222;
  border-bottom-color: #fff;
  cursor: default;
  -webkit-filter: none;
          filter: none;
}

/* A hover state for selected tab. */
a.cke_dialog_tab_selected:hover {
  background: #fff;
}

.cke_hc a.cke_dialog_tab:hover,
.cke_hc a.cke_dialog_tab_selected {
  border: 3px solid;
  padding: 2px 6px;
}

a.cke_dialog_tab_disabled {
  color: #bababa;
  cursor: default;
}

/* selectbox inside tabs container */
.cke_dialog_tabs .cke_dialog_ui_input_select {
  top: -7px !important;
}

/* The .cke_single_page class is appended to the dialog outer element in case
   of dialogs that has no tabs. */
.cke_single_page .cke_dialog_tabs {
  display: none;
}

.cke_single_page .cke_dialog_contents {
  padding-top: 5px;
  margin-top: 0;
  border-top: none;
}

/* The close button at the top of the dialog. */
.cke_dialog_close_button {
  background-image: url(images/close.png);
  background-repeat: no-repeat;
  background-position: 0 0;
  position: absolute;
  cursor: pointer;
  text-align: center;
  height: 20px;
  width: 20px;
  top: 9px;
  z-index: 5;
}

.cke_hidpi .cke_dialog_close_button {
  background-image: url(images/hidpi/close.png);
  background-size: 16px;
}

.cke_dialog_close_button span {
  display: none;
}

.cke_hc .cke_dialog_close_button span {
  display: inline;
  cursor: pointer;
  font-weight: bold;
  position: relative;
  top: 3px;
}

.cke_ltr .cke_dialog_close_button {
  right: 5px;
}

.cke_rtl .cke_dialog_close_button {
  left: 6px;
}

/*
Dialog UI Elements
--------------------

The remaining styles define the UI elements that can be used inside dialog
contents.

Most of the UI elements on dialogs contain a textual label. All of them share
the same labelling structure, having the label text inside an element with
.cke_dialog_ui_labeled_label and the element specific part inside the
.cke_dialog_ui_labeled_content class.
*/
/* If an element is supposed to be disabled, the .cke_disabled class is
   appended to it. */
div.cke_disabled .cke_dialog_ui_labeled_content div * {
  background-color: #ddd;
  cursor: default;
}

/*
Horizontal-Box and Vertical-Box
---------------------------------

There are basic layou element used by the editor to properly align elements in
the dialog. They're basically tables that have each cell filled by UI elements.

The following is the visual representation of a H-Box:

+-- .cke_dialog_ui_hbox --------------------------------------------------------------------------------+
|  +-- .cke_dialog_ui_hbox_first --+ +-- .cke_dialog_ui_hbox_child --+ +-- .cke_dialog_ui_hbox_last --+ |
|  +                               + +                               + +                              + |
|  +-------------------------------+ +-------------------------------+ +------------------------------+ |
+-------------------------------------------------------------------------------------------------------+

It is possible to have nested V/H-Boxes.
*/
.cke_dialog_ui_vbox table, .cke_dialog_ui_hbox table {
  margin: auto;
}

.cke_dialog_ui_vbox {
  margin-top: 5px;
}

.cke_dialog_ui_vbox_child {
  padding: 5px 0;
}

.cke_dialog_ui_hbox {
  width: 100%;
}

.cke_dialog_ui_hbox_first,
.cke_dialog_ui_hbox_child,
.cke_dialog_ui_hbox_last {
  vertical-align: top;
}

/* To center a horizontal label-input (selection field dialog / find and replace) */
.cke_dialog_ui_hbox_first > .cke_dialog_ui_labeled_label, .cke_dialog_ui_hbox_first > .cke_dialog_ui_html,
.cke_dialog_ui_hbox_last > .cke_dialog_ui_labeled_label,
.cke_dialog_ui_hbox_last > .cke_dialog_ui_html {
  line-height: 30px;
}

.cke_ltr .cke_dialog_ui_hbox_first,
.cke_ltr .cke_dialog_ui_hbox_child {
  padding-right: 10px;
}

.cke_rtl .cke_dialog_ui_hbox_first,
.cke_rtl .cke_dialog_ui_hbox_child {
  padding-left: 10px;
}

.cke_ltr .cke_dialog_footer_buttons .cke_dialog_ui_hbox_first,
.cke_ltr .cke_dialog_footer_buttons .cke_dialog_ui_hbox_child {
  padding-right: 5px;
}

.cke_rtl .cke_dialog_footer_buttons .cke_dialog_ui_hbox_first,
.cke_rtl .cke_dialog_footer_buttons .cke_dialog_ui_hbox_child {
  padding-left: 5px;
  padding-right: 0;
}

/* Applies to all labeled dialog fields */
.cke_hc div.cke_dialog_ui_input_text, .cke_hc div.cke_dialog_ui_input_password, .cke_hc div.cke_dialog_ui_input_textarea, .cke_hc div.cke_dialog_ui_input_select, .cke_hc div.cke_dialog_ui_input_file {
  border: 1px solid;
}

/*
Text Input
------------

The basic text field to input text.

+-- .cke_dialog_ui_text --------------------------+
|  +-- .cke_dialog_ui_labeled_label ------------+ |
|  |                                            | |
|  +--------------------------------------------+ |
|  +-- .cke_dialog_ui_labeled_content ----------+ |
|  | +-- div.cke_dialog_ui_input_text --------+ | |
|  | | +-- input.cke_dialog_ui_input_text --+ | | |
|  | | |                                    | | | |
|  | | +------------------------------------+ | | |
|  | +----------------------------------------+ | |
|  +--------------------------------------------+ |
+-------------------------------------------------+
*/
.cke_dialog_ui_text {
  margin-bottom: 7px;
}

.cke_dialog_ui_select {
  height: auto !important;
  margin-bottom: 7px;
}

/*
Textarea
----------

The textarea field to input larger text.

+-- .cke_dialog_ui_textarea --------------------------+
|  +-- .cke_dialog_ui_labeled_label ----------------+ |
|  |                                                | |
|  +------------------------------------------------+ |
|  +-- .cke_dialog_ui_labeled_content --------------+ |
|  | +-- div.cke_dialog_ui_input_textarea --------+ | |
|  | | +-- input.cke_dialog_ui_input_textarea --+ | | |
|  | | |                                        | | | |
|  | | +----------------------------------------+ | | |
|  | +--------------------------------------------+ | |
|  +------------------------------------------------+ |
+-----------------------------------------------------+
*/
textarea.cke_dialog_ui_input_textarea {
  overflow: auto;
  resize: none;
}

input.cke_dialog_ui_input_text,
input.cke_dialog_ui_input_password,
textarea.cke_dialog_ui_input_textarea {
  display: block;
  width: 100%;
  height: 34px;
  padding: 6px 12px;
  font-size: 14px;
  line-height: 1.4;
  color: #555;
  background-color: #fff;
  background-image: none;
  border: 1px solid #ddd;
  border-radius: 3px;
  -webkit-transition: border-color ease-in-out 0.15s, -webkit-box-shadow ease-in-out 0.15s;
  transition: border-color ease-in-out 0.15s, -webkit-box-shadow ease-in-out 0.15s;
  transition: border-color ease-in-out 0.15s, box-shadow ease-in-out 0.15s;
  transition: border-color ease-in-out 0.15s, box-shadow ease-in-out 0.15s, -webkit-box-shadow ease-in-out 0.15s;
}

@media screen and (prefers-reduced-motion: reduce) {
  input.cke_dialog_ui_input_text,
  input.cke_dialog_ui_input_password,
  textarea.cke_dialog_ui_input_textarea {
    -webkit-transition: none;
    transition: none;
  }
}

input.cke_dialog_ui_input_text:focus,
input.cke_dialog_ui_input_password:focus,
textarea.cke_dialog_ui_input_textarea:focus {
  color: #222;
  background-color: #fff;
  border-color: #66afe9;
  outline: 0;
  -webkit-box-shadow: 0 0 0 1px rgba(34, 34, 34, 0.25);
          box-shadow: 0 0 0 1px rgba(34, 34, 34, 0.25);
}

/*
Button
--------

The buttons used in the dialog footer or inside the contents.

+-- a.cke_dialog_ui_button -----------+
|  +-- span.cke_dialog_ui_button --+  |
|  |                               |  |
|  +-------------------------------+  |
+-------------------------------------+
*/
/* The outer part of the button. */
a.cke_dialog_ui_button {
  display: inline-block;
  *display: inline;
  *zoom: 1;
  padding: 3px 0;
  margin: 0;
  text-align: center;
  color: #222;
  vertical-align: middle;
  cursor: pointer;
  border: 1px solid #ddd;
  border-radius: 3px;
  background: #fff;
}

a.cke_dialog_ui_button:hover, a.cke_dialog_ui_button:focus, a.cke_dialog_ui_button:active {
  border-color: #9d9d9d;
  background-color: #ddd;
  text-decoration: none;
}

/* Buttons inside the content */
.cke_dialog_page_contents a.cke_dialog_ui_button {
  height: 22px;
  line-height: 22px;
  background-color: #f4f4f4;
}

.cke_dialog_page_contents a.cke_dialog_ui_button:hover, .cke_dialog_page_contents a.cke_dialog_ui_button:focus, .cke_dialog_page_contents a.cke_dialog_ui_button:active {
  background-color: #ddd;
}

span.cke_dialog_ui_button {
  padding: 0 12px;
}

.cke_hc a.cke_dialog_ui_button:hover, .cke_hc a.cke_dialog_ui_button:focus, .cke_hc a.cke_dialog_ui_button:active {
  border: 3px solid;
  padding-top: 1px;
  padding-bottom: 1px;
}

.cke_hc a.cke_dialog_ui_button:hover span, .cke_hc a.cke_dialog_ui_button:focus span, .cke_hc a.cke_dialog_ui_button:active span {
  padding-left: 10px;
  padding-right: 10px;
}

/*
a.cke_dialog_ui_button[style*="width"]
{
    display: block !important;
    width: auto !important;
}
*/
/* The inner part of the button (both in dialog tabs and dialog footer). */
.cke_dialog_footer_buttons a.cke_dialog_ui_button span {
  color: inherit;
  font-size: 12px;
  line-height: 20px;
}

/* Special class appended to the Ok button. */
a.cke_dialog_ui_button_ok {
  color: #fff;
  background-color: #5cb85c;
}

/* Special class appended to the Cancel button. */
a.cke_dialog_ui_button_cancel {
  color: #222;
  background-color: #ddd;
}

span.cke_dialog_ui_button {
  cursor: pointer;
}

/* A special container that holds the footer buttons. */
.cke_dialog_footer_buttons {
  display: inline-table;
  margin: 10px;
  width: auto;
  position: relative;
  vertical-align: middle;
}

/*
Styles for other dialog element types.
*/
div.cke_dialog_ui_input_select {
  display: table;
}

select.cke_dialog_ui_input_select {
  height: 30px;
  line-height: 30px;
  background-color: #fff;
  padding: 4px 10px;
  border: 1px solid #ddd;
  outline: none;
  border-radius: 3px;
  -webkit-box-shadow: inset 0 1px 1px rgba(0, 0, 0, 0.075);
  box-shadow: inset 0 1px 1px rgba(0, 0, 0, 0.075);
}

.cke_dialog_ui_input_file {
  width: 100%;
  height: 30px;
}

.cke_hc .cke_dialog_ui_labeled_content input:focus, .cke_hc .cke_dialog_ui_labeled_content select:focus, .cke_hc .cke_dialog_ui_labeled_content textarea:focus {
  outline: 1px dotted;
}

/*
 * Some utility CSS classes for dialog authors.
 */
.cke_dialog .cke_dark_background {
  background-color: #ddd;
}

.cke_dialog .cke_light_background {
  background-color: #ddd;
}

.cke_dialog .cke_centered {
  text-align: center;
}

.cke_dialog a.cke_btn_reset {
  float: right;
  background: url(images/refresh.png) top left no-repeat;
  width: 16px;
  height: 16px;
  border: 1px none;
  font-size: 1px;
}

.cke_dialog a.cke_btn_locked, .cke_dialog a.cke_btn_unlocked {
  float: left;
  width: 16px;
  height: 16px;
  background-repeat: no-repeat;
  border: none 1px;
  font-size: 1px;
}

.cke_dialog a.cke_btn_locked {
  background-image: url(images/lock.png);
}

.cke_dialog a.cke_btn_locked .cke_icon {
  display: none;
}

.cke_dialog a.cke_btn_unlocked {
  background-image: url(images/lock-open.png);
}

.cke_dialog .cke_btn_over {
  border: outset 1px;
  cursor: pointer;
}

.cke_hidpi .cke_dialog a.cke_btn_reset {
  background-size: 16px;
  background-image: url(images/hidpi/refresh.png);
}

.cke_hidpi .cke_dialog a.cke_btn_unlocked, .cke_hidpi .cke_dialog a.cke_btn_locked {
  background-size: 16px;
}

.cke_hidpi .cke_dialog a.cke_btn_locked {
  background-image: url(images/hidpi/lock.png);
}

.cke_hidpi .cke_dialog a.cke_btn_unlocked {
  background-image: url(images/hidpi/lock-open.png);
}

.cke_rtl .cke_dialog a.cke_btn_reset {
  float: left;
}

.cke_rtl .cke_dialog a.cke_btn_locked, .cke_rtl .cke_dialog a.cke_btn_unlocked {
  float: right;
}

/*
The rest of the file contains style used on several common plugins. There is a
tendency that these will be moved to the plugins code in the future.
*/
.cke_dialog .ImagePreviewBox, .cke_dialog .FlashPreviewBox {
  border: 1px solid #9d9d9d;
  border-radius: 3px;
  padding: 6px 10px;
  margin-top: 5px;
  background-color: white;
}

.cke_dialog .ImagePreviewBox {
  overflow: scroll;
  height: 205px;
  width: 300px;
}

.cke_dialog .ImagePreviewBox table td {
  white-space: normal;
}

.cke_dialog .FlashPreviewBox {
  white-space: normal;
  overflow: auto;
  height: 160px;
  width: 390px;
}

.cke_dialog .ImagePreviewLoader {
  position: absolute;
  white-space: normal;
  overflow: hidden;
  height: 160px;
  width: 230px;
  margin: 2px;
  padding: 2px;
  opacity: 0.9;
  filter: alpha(opacity=90);
  background-color: #e4e4e4;
}

.cke_dialog .cke_pastetext {
  width: 346px;
  height: 170px;
}

.cke_dialog .cke_pastetext textarea {
  width: 340px;
  height: 170px;
  resize: none;
}

.cke_dialog iframe.cke_pasteframe {
  width: 346px;
  height: 130px;
  background-color: white;
  border: 1px solid #aeb3b9;
  border-radius: 3px;
}

.cke_dialog .cke_hand {
  cursor: pointer;
}

.cke_disabled {
  color: #a0a0a0;
}

.cke_dialog_body .cke_label {
  display: none;
}

.cke_dialog_body label {
  display: inline-block;
  margin-bottom: 3px;
  cursor: default;
}

.cke_dialog_body label.cke_required {
  font-weight: bold;
}

.cke_dialog_ui_html {
  line-height: 150%;
}

a.cke_smile {
  overflow: hidden;
  display: block;
  text-align: center;
  padding: 0.3em 0;
}

a.cke_smile img {
  vertical-align: middle;
}

a.cke_specialchar {
  cursor: inherit;
  display: block;
  height: 1.25em;
  padding: 0.2em 0.3em;
  text-align: center;
}

a.cke_smile,
a.cke_specialchar {
  background-color: #ddd;
  border: 1px solid transparent;
  vertical-align: top;
}

a.cke_smile:hover, a.cke_smile:focus, a.cke_smile:active,
a.cke_specialchar:hover,
a.cke_specialchar:focus,
a.cke_specialchar:active {
  background: #fff;
  outline: 0;
}

a.cke_smile:hover,
a.cke_specialchar:hover {
  border-color: #ddd;
}

a.cke_smile:focus, a.cke_smile:active,
a.cke_specialchar:focus,
a.cke_specialchar:active {
  border-color: #222;
}

/**
 * Styles specific to "cellProperties" dialog.
 */
.cke_dialog_contents a.colorChooser {
  display: block;
  margin-top: 6px;
  margin-left: 10px;
  width: 80px;
}

.cke_rtl .cke_dialog_contents a.colorChooser {
  margin-right: 10px;
}

.cke_dialog_ui_checkbox {
  display: inline-block;
  margin-bottom: 5px;
}

/* Compensate focus outline for some input elements. (#6200) */
.cke_dialog_ui_checkbox_input:focus,
.cke_dialog_ui_radio_input:focus,
.cke_btn_over {
  outline: 1px dotted #696969;
}

.cke_iframe_shim {
  display: block;
  position: absolute;
  top: 0;
  left: 0;
  z-index: -1;
  filter: alpha(opacity=0);
  width: 100%;
  height: 100%;
}

/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
